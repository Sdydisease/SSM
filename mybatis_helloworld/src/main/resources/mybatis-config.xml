<?xml version="1.0" encoding="UTF-8" ?>

<!--MyBatis的核心配置文件-->

<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
        MyBatis核心配置文件中，标签的顺序：
        properties?,settings?,typeAliases?,typeHandlers?,
        objectFactory?,objectWrapperFactory?,reflectorFactory?,
        plugins?,environments?,databaseIdProvider?,mappers?
    -->



    <!--引入properties文件，此后就可以在当前文件中使用${key}的方式访问value-->
    <properties resource="jdbc.properties"></properties>


    <!--
        typeAliases:设置类型别名，即为某个具体的类型设置一个别名
        在MyBatis的范围中，就可以使用别名表示一个具体的类型
    -->
    <typeAliases>

        <!--
            type：设置需要起别名的类型
            alias：设置某个类型的别名(可以不写，若不写则别名默认为指定的类型的类名)
        -->
<!--        <typeAlias type="com.atguigu.mybatis.pojo.User" alias="abc"></typeAlias>-->
<!--        <typeAlias type="com.atguigu.mybatis.pojo.User"></typeAlias>    此时别名为：user(不区分大小写)-->
        <package name="com.atguigu.mybatis.pojo"/><!--通过包来设置类型别名，使得指定包下所有的类型将全部拥有默认的类型别名-->
    </typeAliases>


    <!--
        environments:配置连接数据库的环境
        属性：
            default:设置默认使用的环境的id(对应environment的id)
    -->
    <environments default="development">

        <!--
            environment：设置一个具体地连接数据库的环境
            属性：
                id：设置环境的唯一标识，不能重复
        -->
        <environment id="development">

            <!--
                transactionManager：设置事务管理器(事务的管理方式)
                属性：
                    type：设置事务管理的方式(取值"JDBC"/"MANAGED")
                        JDBC：表示使用JDBC中原生的事务管理方式
                        MANAGED：被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>

            <!--
                dataSource：设置数据源
                属性：
                    type：设置数据源的类型(取值"POOLED"/"UNPOOLED"/"JNDI")
                        POOLED:表示使用数据库连接池
                        UNPOOLED：表示不使用数据库连接池
                        JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>


        <!--另一个环境-->
        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>

    <!--引入Mybatis映射文件-->
    <mappers>
<!--        <mapper resource="mappers/UserMapper.xml"/>-->
        <!--
            以包的方式引入映射文件，但是必须满足两个条件：
                1、mapper接口所在的包和映射文件所在的包必须一致
                2、mapper接口的名字和映射文件的名字必须一致
            在resources包下创建：com/atguigu/mybatis/mapper包，以后的所有映射文件都放在这下面
        -->
        <package name="com.atguigu.mybatis.mapper"/>
    </mappers>
</configuration>